<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- Controller组件扫描 -->
<context:component-scan base-package="cn.syn.tiles.springmvc.controller" />
<!-- 开启springMVC的注解驱动，使得url可以映射到对应的controller -->
<mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
<!-- 视图解析 -->
<!--InternalResourceViewResolver：用于支持Servlet、JSP视图解析；-->
<!--prefix和suffix：查找视图页面的前缀和后缀（前缀[逻辑视图名]后缀），
比如传进来的逻辑视图名为hello，则该该jsp视图页面应该存放在“WEB-INF/jsp/hello.jsp”；-->
<!--根据上面定义的规则，studentDisplay 的逻辑视图将委托给位于/WEB-INF/view/studentDisplay.jsp这个视图来实现。-->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <!--<property name="prefix" value="/WEB-INF/views/" />-->
    <property name="prefix" value="/views/"/>
    <property name="suffix" value=".jsp" />
</bean>


    <!--配置validator校验器-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>messages</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="true"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>

    <!-- AOP 注解方式 ；定义Aspect -->
    <!-- 激活组件扫描功能,在包"com.example.aop及其子包下面自动扫描通过注解配置的组件-->
    <context:component-scan base-package="cn.syn.tiles.springmvc.aop"/>
    <!-- 启动AspectJ支持   只对扫描过的bean有效-->
    <!--<aop:aspectj-autoproxy proxy-target-class="true" />-->
    <aop:aspectj-autoproxy />
    <bean id="DBAop" class="cn.syn.tiles.springmvc.aop.DBAop"/>
    <aop:config>
        <aop:pointcut id="DBPointcut" expression="execution(* cn.syn.tiles.springmvc.dao.StudentMapper.*(..))" />
        <!--<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />-->
        <aop:aspect ref="DBAop">
            <!--【环绕通知】-->
            <aop:around method="arroud" pointcut-ref="DBPointcut"/>
            <!--【前置通知】 在目标方法之前执行-->
            <aop:before method="beginTransaction" pointcut-ref="DBPointcut" />
            <!--【后置通知】-->
            <aop:after method="commit" pointcut-ref="DBPointcut"/>
            <!-- 【返回后通知】 -->
            <aop:after-returning method="afterReturing" pointcut-ref="DBPointcut"/>
            <!-- 异常通知 -->
            <aop:after-throwing method="afterThrowing" pointcut-ref="DBPointcut"/>
        </aop:aspect>
    </aop:config>

    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" p:order="1"></bean>
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/jsp/tiles.xml</value>
            </list>
        </property>
    </bean>

</beans>